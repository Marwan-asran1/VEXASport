﻿
@model List<VEXA.Models.Product>
@{
    ViewBag.Title = "Products Management";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    /* Simple Table Styling */
    table {
        width: 100%;
        border-collapse: collapse;
        background: white;
        margin-bottom: 20px;
        font-family: Arial, sans-serif;
    }

    table thead tr {
        background: #f8f9fa;
        color: #333;
        text-align: center;
        font-weight: bold;
        font-size: 14px;
        text-transform: uppercase;
    }

    table th {
        padding: 15px 10px;
        border: 1px solid #dee2e6;
        border-bottom: 2px solid #dee2e6;
    }

    table td {
        padding: 12px 10px;
        border: 1px solid #dee2e6;
        font-size: 14px;
        color: #333;
        word-wrap: break-word;
        word-break: break-word;
        vertical-align: top;
    }

    /* Column widths */
    table th:nth-child(1), table td:nth-child(1) { width: 5%; } /* ID */
    table th:nth-child(2), table td:nth-child(2) { width: 20%; } /* Name */
    table th:nth-child(3), table td:nth-child(3) { width: 10%; } /* Price */
    table th:nth-child(4), table td:nth-child(4) { width: 15%; } /* Category */
    table th:nth-child(5), table td:nth-child(5) { width: 10%; } /* Stock S */
    table th:nth-child(6), table td:nth-child(6) { width: 10%; } /* Stock M */
    table th:nth-child(7), table td:nth-child(7) { width: 10%; } /* Stock L */
    table th:nth-child(8), table td:nth-child(8) { width: 20%; } /* Actions */

    table tbody tr:nth-of-type(even) {
        background: #f8f9fa;
    }

    table tbody tr:hover {
        background: #e9ecef;
    }

    /* Green Add Button */
    .btn-add {
        position: fixed;
        bottom: 40px;
        right: 30px;
        background: #28a745;
        color: white;
        border: none;
        border-radius: 50%;
        width: 60px;
        height: 60px;
        font-size: 28px;
        cursor: pointer;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        transition: all 0.3s ease;
        z-index: 1000;
    }

    .btn-add:hover {
        background: #218838;
        transform: scale(1.05);
    }

    /* Action Buttons */
    .btn-edit,
    .btn-delete {
        padding: 6px 12px;
        font-size: 12px;
        border-radius: 4px;
        border: none;
        cursor: pointer;
        font-weight: 500;
        margin: 2px;
        transition: all 0.3s ease;
    }

    .btn-edit {
        background: #007bff;
        color: white;
    }

    .btn-edit:hover {
        background: #0056b3;
    }

    .btn-delete {
        background: #dc3545;
        color: white;
    }

    .btn-delete:hover {
        background: #c82333;
    }
</style>

<div class="container-fluid">
    <h1 class="h3 mb-2 text-gray-800">Products Management</h1>
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">All Products</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Price</th>
                            <th>Category</th>
                            <th>Stock S</th>
                            <th>Stock M</th>
                            <th>Stock L</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var product in Model)
                        {
                            <tr>
                                <td>@product.Id</td>
                                <td>@product.Name</td>
                                <td>$@product.Price</td>
                                <td>@(product.Category?.Name ?? "No Category")</td>
                                <td>@product.StockS</td>
                                <td>@product.StockM</td>
                                <td>@product.StockL</td>
                                <td>
                                    <button class="btn-edit" onclick="openEditModal(@product.Id)">Edit</button>
                                    <form asp-controller="Admin" asp-action="DeleteProduct" asp-route-id="@product.Id" 
                                          method="post" style="display:inline;"
                                          onsubmit="return confirm('Are you sure you want to delete this product?');">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn-delete">Delete</button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Product Modal -->
<div id="productModal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2 id="modalTitle">Add New Product</h2>

        <form id="productForm" method="post" asp-controller="Admin" asp-action="CreateProduct">
            @Html.AntiForgeryToken()
            <input type="hidden" id="productId" name="Id" value="0" />
            
            <div class="form-group">
                <label for="productName">Product Name</label>
                <input type="text" class="form-control" id="productName" name="Name" 
                       placeholder="Enter product name" required />
            </div>
            
            <div class="form-group">
                <label for="productPrice">Price</label>
                <input type="number" class="form-control" id="productPrice" name="Price" 
                       placeholder="Enter price" step="0.01" min="0" required />
            </div>
            
            <div class="form-group">
                <label for="productCategory">Category</label>
                <select class="form-control" id="productCategory" name="CategoryId" required>
                    <option value="">Select Category</option>
                    @foreach (var category in ViewBag.Categories ?? new List<Category>())
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                </select>
            </div>
            
            <div class="form-group">
                <label>Stock Quantities</label>
                <div class="row">
                    <div class="col-md-4">
                        <input type="number" class="form-control" id="stockS" name="StockS" 
                               placeholder="Size S" min="0" required />
                    </div>
                    <div class="col-md-4">
                        <input type="number" class="form-control" id="stockM" name="StockM" 
                               placeholder="Size M" min="0" required />
                    </div>
                    <div class="col-md-4">
                        <input type="number" class="form-control" id="stockL" name="StockL" 
                               placeholder="Size L" min="0" required />
                    </div>
                </div>
            </div>

            <button type="submit" class="btn btn-success mt-3" id="productSubmitButton">Save Product</button>
        </form>
    </div>
</div>

<!-- Add the green + button after the table -->
<button class="btn-add" onclick="openAddProductModal()">+</button>

<script>
    const modal = document.getElementById("productModal");
    const form = document.getElementById("productForm");
    const modalTitle = document.getElementById("modalTitle");

    function openAddProductModal() {
        modalTitle.textContent = "Add New Product";
        form.reset();
        document.getElementById("productId").value = "0";
        form.action = "/Admin/CreateProduct";
        modal.style.display = "block";
    }

    function openEditModal(productId) {
        fetch(`/Admin/GetProduct/${productId}`)
            .then(res => {
                if (!res.ok) {
                    throw new Error('Network response was not ok');
                }
                return res.json();
            })
            .then(product => {
                modalTitle.textContent = "Edit Product";
                document.getElementById("productId").value = product.id;
                document.getElementById("productName").value = product.name || "";
                document.getElementById("productPrice").value = product.price || "";
                document.getElementById("productCategory").value = product.categoryId || "";
                document.getElementById("stockS").value = product.stockS || "";
                document.getElementById("stockM").value = product.stockM || "";
                document.getElementById("stockL").value = product.stockL || "";
                form.action = "/Admin/UpdateProduct";
                modal.style.display = "block";
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error loading product data. Please try again.');
            });
    }

    function closeModal() {
        modal.style.display = "none";
    }

    document.querySelector(".close").onclick = closeModal;
    window.onclick = event => {
        if (event.target == modal) closeModal();
    };

    // Form validation
    form.addEventListener('submit', function(e) {
        const name = document.getElementById('productName').value.trim();
        const price = document.getElementById('productPrice').value;
        const category = document.getElementById('productCategory').value;
        const stockS = document.getElementById('stockS').value;
        const stockM = document.getElementById('stockM').value;
        const stockL = document.getElementById('stockL').value;

        if (!name) {
            e.preventDefault();
            alert('Please enter a product name');
            return false;
        }

        if (!price || price <= 0) {
            e.preventDefault();
            alert('Please enter a valid price');
            return false;
        }

        if (!category) {
            e.preventDefault();
            alert('Please select a category');
            return false;
        }

        if (!stockS || !stockM || !stockL || stockS < 0 || stockM < 0 || stockL < 0) {
            e.preventDefault();
            alert('Please enter valid stock quantities');
            return false;
        }

        const submitButton = document.getElementById('productSubmitButton');
        submitButton.disabled = true;
        submitButton.textContent = 'Saving...';
    });
</script>