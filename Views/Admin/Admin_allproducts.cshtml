﻿
@model List<VEXA.Models.Product>
@{
    ViewBag.Title = "All Products";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<link rel="stylesheet" href="~/AdminStyle/css/sb-admin-2.css" />
<script src="~/AdminStyle/js/sb-admin-2.js"></script>

<style>
    /* Simple Table Styling */
    table {
        width: 100%;
        border-collapse: collapse;
        background: white;
        margin-bottom: 20px;
        font-family: Arial, sans-serif;
    }

    table thead tr {
        background: #f8f9fa;
        color: #333;
        text-align: center;
        font-weight: bold;
        font-size: 14px;
        text-transform: uppercase;
    }

    table th {
        padding: 15px 10px;
        border: 1px solid #dee2e6;
        border-bottom: 2px solid #dee2e6;
    }

    table td {
        padding: 12px 10px;
        border: 1px solid #dee2e6;
        font-size: 14px;
        color: #333;
        word-wrap: break-word;
        word-break: break-word;
        vertical-align: top;
    }

    /* Responsive column widths that fit screen */
    table th:nth-child(1), table td:nth-child(1) { /* ID */
        width: 5%;
        min-width: 50px;
    }

    table th:nth-child(2), table td:nth-child(2) { /* Name */
        width: 12%;
        min-width: 100px;
    }

    table th:nth-child(3), table td:nth-child(3) { /* Description */
        width: 20%;
        min-width: 150px;
    }

    table th:nth-child(4), table td:nth-child(4) { /* Price */
        width: 8%;
        min-width: 80px;
    }

    table th:nth-child(5), table td:nth-child(5) { /* Image URL */
        width: 25%;
        min-width: 200px;
    }

    table th:nth-child(6), table td:nth-child(6) { /* Stock S */
        width: 6%;
        min-width: 60px;
        text-align: center;
    }

    table th:nth-child(7), table td:nth-child(7) { /* Stock M */
        width: 6%;
        min-width: 60px;
        text-align: center;
    }

    table th:nth-child(8), table td:nth-child(8) { /* Stock L */
        width: 6%;
        min-width: 60px;
        text-align: center;
    }

    table th:nth-child(9), table td:nth-child(9) { /* Date Created */
        width: 8%;
        min-width: 100px;
    }

    table th:nth-child(10), table td:nth-child(10) { /* Category ID */
        width: 8%;
        min-width: 80px;
        text-align: center;
    }

    table th:nth-child(11), table td:nth-child(11) { /* Action */
        width: 6%;
        min-width: 120px;
        white-space: nowrap;
        text-align: center;
    }

    table tbody tr:nth-of-type(even) {
        background: #f8f9fa;
    }

    table tbody tr:hover {
        background: #e9ecef;
    }

    .table-responsive {
        overflow-x: hidden;
        max-width: 100%;
    }

    /* Simple Button Styling */
    .btn-add {
        position: fixed;
        bottom: 40px;
        right: 30px;
        background: #28a745;
        color: white;
        border: none;
        border-radius: 50%;
        width: 60px;
        height: 60px;
        font-size: 28px;
        cursor: pointer;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        transition: all 0.3s ease;
        z-index: 1000;
    }

    .btn-add:hover {
        background: #218838;
        transform: scale(1.05);
    }

    .btn-edit,
    .btn-delete {
        padding: 6px 12px;
        font-size: 12px;
        border-radius: 4px;
        border: none;
        cursor: pointer;
        font-weight: 500;
        margin: 2px;
        transition: all 0.3s ease;
    }

    .btn-edit {
        background: #007bff;
        color: white;
    }

    .btn-edit:hover {
        background: #0056b3;
    }

    .btn-delete {
        background: #dc3545;
        color: white;
    }

    .btn-delete:hover {
        background: #c82333;
    }

    /* Simple Modal Styling */
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
        background: white;
        margin: 5% auto;
        padding: 20px;
        border-radius: 8px;
        width: 60%;
        max-height: 80vh;
        overflow-y: auto;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
    }

    .close:hover {
        color: #333;
    }

    /* Simple Form Styling */
    .form-group {
        margin-bottom: 15px;
    }

    .form-group label {
        display: block;
        margin-bottom: 5px;
        font-weight: 600;
        color: #333;
    }

    .form-control {
        width: 100%;
        padding: 8px 12px;
        border: 1px solid #ced4da;
        border-radius: 4px;
        font-size: 14px;
    }

    .form-control:focus {
        outline: none;
        border-color: #007bff;
        box-shadow: 0 0 0 2px rgba(0,123,255,0.25);
    }

    /* Simple Alert Styling */
    .alert {
        border-radius: 4px;
        padding: 12px 16px;
        margin-bottom: 20px;
        border: 1px solid transparent;
    }

    .alert-success {
        background: #d4edda;
        color: #155724;
        border-color: #c3e6cb;
    }

    .alert-danger {
        background: #f8d7da;
        color: #721c24;
        border-color: #f5c6cb;
    }

    /* Simple Card Styling */
    .card {
        border: 1px solid #dee2e6;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .card-header {
        background: #f8f9fa;
        border-bottom: 1px solid #dee2e6;
        padding: 15px 20px;
    }

    .card-header h6 {
        margin: 0;
        font-weight: 600;
        color: #333;
    }

    .card-body {
        padding: 20px;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .modal-content {
            width: 90%;
            margin: 10% auto;
        }
        
        table th, table td {
            padding: 8px 6px;
            font-size: 12px;
        }
        
        .btn-edit, .btn-delete {
            padding: 4px 8px;
            font-size: 11px;
        }
    }
</style>

<div class="container-fluid">
    <h1 class="h3 mb-2 text-gray-800">Product Manager</h1>
    
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="close" data-dismiss="alert">&times;</button>
        </div>
    }
    
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="close" data-dismiss="alert">&times;</button>
        </div>
    }

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">All Products</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table>
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Description</th>
                            <th>Price</th>
                            <th>Image URL</th>
                            <th>S</th>
                            <th>M</th>
                            <th>L</th>
                            <th>Date Created</th>
                            <th>Category ID</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.Id</td>
                                <td>@item.Name</td>
                                <td>@item.Description</td>
                                <td>@item.Price</td>
                                <td>@item.ImageUrl</td>
                                <td>@item.StockS</td>
                                <td>@item.StockM</td>
                                <td>@item.StockL</td>
                                <td>@item.CreatedDate.ToString("yyyy-MM-dd")</td>
                                <td>@item.CategoryId</td>
                                <td>
                                    <button class="btn-edit" onclick="openEditProductModal(@item.Id)">Edit</button>
                                    <form asp-controller="Admin" asp-action="DeleteProduct" asp-route-id="@item.Id" method="post" style="display:inline;"
                                          onsubmit="return confirm('Are you sure you want to delete this product?');">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn-delete">Delete</button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                <button class="btn-add" onclick="openAddProductModal()">+</button>

                <!-- Add/Edit Product Modal -->
                <div id="addProductModal" class="modal">
                    <div class="modal-content">
                        <span class="close">&times;</span>
                        <h2 id="modalTitle">Add New Product</h2>

                        <form method="post" id="productForm" asp-controller="Admin" asp-action="TestCreateProduct">
                            @Html.AntiForgeryToken()

                            <input type="hidden" id="productId" name="Id" />

                            <div class="form-group">
                                <label for="name">Product Name</label>
                                <input type="text" id="name" name="Name" class="form-control" placeholder="Enter product name" required />
                            </div>

                            <div class="form-group">
                                <label for="description">Description</label>
                                <textarea id="description" name="Description" class="form-control" placeholder="Enter product description" required></textarea>
                            </div>

                            <div class="form-group">
                                <label for="price">Price</label>
                                <input type="number" id="price" name="Price" class="form-control" placeholder="0.00" step="0.01" min="0" required />
                            </div>

                            <div class="form-group">
                                <label for="imageurl">Image URL</label>
                                <input type="url" id="imageurl" name="ImageUrl" class="form-control" placeholder="https://example.com/image.jpg" />
                            </div>

                            <div class="form-group">
                                <label for="categoryId">Category ID</label>
                                <select id="categoryId" name="CategoryId" class="form-control" required>
                                    <option value="">Select Category</option>
                                    <option value="1">Men</option>
                                    <option value="2">Women</option>
                                    <option value="3">Men Tops</option>
                                    <option value="4">Men Bottoms</option>
                                    <option value="5">Women Tops</option>
                                    <option value="6">Women Bottoms</option>
                                </select>
                            </div>

                            <div class="form-group">
                                <label>Stock Quantities:</label>
                                <div class="row">
                                    <div class="col-md-4">
                                        <label for="Stock_S">Small (S)</label>
                                        <input type="number" id="Stock_S" name="StockS" class="form-control" placeholder="0" min="0" required />
                                    </div>
                                    <div class="col-md-4">
                                        <label for="Stock_M">Medium (M)</label>
                                        <input type="number" id="Stock_M" name="StockM" class="form-control" placeholder="0" min="0" required />
                                    </div>
                                    <div class="col-md-4">
                                        <label for="Stock_L">Large (L)</label>
                                        <input type="number" id="Stock_L" name="StockL" class="form-control" placeholder="0" min="0" required />
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <button type="submit" class="btn btn-success" id="submitButton">Save Product</button>
                                <button type="button" class="btn btn-secondary" onclick="closeModal()">Cancel</button>
                            </div>
                        </form>
                    </div>
                </div>

                <script>
                    const modal = document.getElementById("addProductModal");
                    const form = document.getElementById("productForm");
                    const modalTitle = document.getElementById("modalTitle");

                    function openAddProductModal() {
                        modalTitle.textContent = "Add New Product";
                        form.reset();
                        document.getElementById("productId").value = "0";
                        form.action = "/Admin/TestCreateProduct";
                        form.method = "post";
                        modal.style.display = "block";
                    }

                    function openEditProductModal(productId) {
                        fetch(`/Admin/GetProduct/${productId}`)
                            .then(res => {
                                if (!res.ok) {
                                    throw new Error('Network response was not ok');
                                }
                                return res.json();
                            })
                            .then(product => {
                                modalTitle.textContent = "Edit Product";
                                document.getElementById("productId").value = product.id;
                                document.getElementById("name").value = product.name || "";
                                document.getElementById("description").value = product.description || "";
                                document.getElementById("price").value = product.price || "";
                                document.getElementById("imageurl").value = product.imageUrl || "";
                                document.getElementById("categoryId").value = product.categoryId || "";
                                document.getElementById("Stock_S").value = product.stockS || 0;
                                document.getElementById("Stock_M").value = product.stockM || 0;
                                document.getElementById("Stock_L").value = product.stockL || 0;
                                form.action = "/Admin/UpdateProduct";
                                form.method = "post";
                                modal.style.display = "block";
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                alert('Error loading product data. Please try again.');
                            });
                    }

                    function closeModal() {
                        modal.style.display = "none";
                    }

                    document.querySelector(".close").onclick = closeModal;
                    window.onclick = event => {
                        if (event.target == modal) closeModal();
                    };

                    // Form submission handling
                    form.addEventListener('submit', function(e) {
                        // Debug: Log form data
                        const formData = new FormData(form);
                        console.log('Form data being sent:');
                        for (let [key, value] of formData.entries()) {
                            console.log(key + ': ' + value);
                        }

                        // Validate form before submission
                        const name = document.getElementById('name').value.trim();
                        const description = document.getElementById('description').value.trim();
                        const price = document.getElementById('price').value;
                        const categoryId = document.getElementById('categoryId').value;
                        const stockS = document.getElementById('Stock_S').value;
                        const stockM = document.getElementById('Stock_M').value;
                        const stockL = document.getElementById('Stock_L').value;

                        if (!name) {
                            e.preventDefault();
                            alert('Please enter a product name');
                            return false;
                        }

                        if (!description) {
                            e.preventDefault();
                            alert('Please enter a product description');
                            return false;
                        }

                        if (!price || price <= 0) {
                            e.preventDefault();
                            alert('Please enter a valid price');
                            return false;
                        }

                        if (!categoryId) {
                            e.preventDefault();
                            alert('Please select a category');
                            return false;
                        }

                        if (!stockS || stockS < 0) {
                            e.preventDefault();
                            alert('Please enter a valid stock quantity for Small size');
                            return false;
                        }

                        if (!stockM || stockM < 0) {
                            e.preventDefault();
                            alert('Please enter a valid stock quantity for Medium size');
                            return false;
                        }

                        if (!stockL || stockL < 0) {
                            e.preventDefault();
                            alert('Please enter a valid stock quantity for Large size');
                            return false;
                        }

                        const submitButton = document.getElementById('submitButton');
                        submitButton.disabled = true;
                        submitButton.textContent = 'Saving...';
                    });

                    // Auto-hide alerts after 5 seconds
                    setTimeout(function() {
                        const alerts = document.querySelectorAll('.alert');
                        alerts.forEach(alert => {
                            alert.style.display = 'none';
                        });
                    }, 5000);
                </script>
            </div>
        </div>
    </div>
</div>