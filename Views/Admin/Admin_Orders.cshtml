﻿
@model List<VEXA.Models.Order>
@{
    ViewBag.Title = "Orders";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}



<div class="container-fluid">
    <h1 class="h3 mb-2 text-gray-800">Order Manager</h1>

    <div class="card">
        <div class="card-header">
            <h6 class="m-0 font-weight-bold text-primary">Orders</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive orders-table">
                <table class="admin-table">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>User ID</th>
                            <th>Order Number</th>
                            <th>Order Date</th>
                            <th>Shipping Address</th>
                            <th>Phone Number</th>
                            <th>Delivery Date</th>
                            <th>Status</th>
                            <th>Total</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model)
                        {
                            <tr>
                                <td>@order.Id</td>
                                <td>@order.UserId</td>
                                <td>@order.OrderNumber</td>
                                <td>@order.OrderDate.ToString("yyyy-MM-dd")</td>
                                <td>@order.ShippingAddress</td>
                                <td>@order.ContactPhone</td>
                                <td>@(order.DeliveredDate.HasValue ? order.DeliveredDate.Value.ToString("yyyy-MM-dd") : "N/A")</td>
                                <td>
                                    <span class="status-badge status-confirmed">
                                        @order.Status
                                    </span>
                                </td>
                                <td>$@order.OrderTotal.ToString("F2")</td>
                                <td>
                                    <button class="view-order-btn" data-order-id="@order.Id">View</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="pagination-controls">
    <form method="get" action="/Admin/Orders" style="display:flex;gap:8px;align-items:center;justify-content:flex-end;margin-top:10px;">
        <input type="number" name="page" min="1" value="@(Context.Request.Query["page"].FirstOrDefault() ?? "1")" placeholder="Page" style="width:80px;"/>
        <input type="number" name="pageSize" min="5" max="100" value="@(Context.Request.Query["pageSize"].FirstOrDefault() ?? "20")" placeholder="Page Size" style="width:110px;"/>
        <button type="submit" class="btn btn-secondary">Go</button>
    </form>
    <div style="text-align:right;margin-top:6px;">
        @{
            var currentPage = int.TryParse(Context.Request.Query["page"].FirstOrDefault(), out var page) ? page : 1;
            var currentPageSize = int.TryParse(Context.Request.Query["pageSize"].FirstOrDefault(), out var pageSize) ? pageSize : 20;
        }
        <a class="btn btn-light" href="/Admin/Orders?page=@(Math.Max(1, currentPage - 1))&pageSize=@currentPageSize">Prev</a>
        <a class="btn btn-light" href="/Admin/Orders?page=@(currentPage + 1)&pageSize=@currentPageSize">Next</a>
    </div>
</div>

<!-- Order Details Modal -->
<div id="orderDetailsModal" class="modal order-details-modal" style="display: none;">
    <div class="modal-content">
        <div class="modal-header">
            <h2>Order Details</h2>
            <span class="close">&times;</span>
        </div>
        <div class="modal-body">
            <div id="orderDetailsContent">
                <!-- Order details will be loaded here -->
            </div>
        </div>
    </div>
</div>

